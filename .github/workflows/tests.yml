name: Tests

on:
  push:
    branches:
      - main

jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: generate-matrix
        name: Generate matrix
        run: ./matrix.py
        env:
          LLVM_VERSION: 17.0.6,18.1.3
          NINJA: true
          CMAKE_MAJOR_MINOR_VERSION: 3.29
          BEGIN_DATE: 2024-01-01
          END_DATE: 2024-03-21
          INTERVAL: 7

  tests:
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast: false
    runs-on: ubuntu-latest
    name: >
      LLVM ${{ matrix.llvm-version }}
      - CMake ${{ matrix.cmake-version || matrix.cmake-filename }}
      ${{ matrix.ninja && ' - Ninja' || '' }}
    env:
      LLVM_VERSION: ${{ matrix.llvm-version }}
      CMAKE_VERSION: ${{ matrix.cmake-version }}
      CMAKE_FILENAME: ${{ matrix.cmake-filename }}
      USE_NINJA: ${{ matrix.ninja && '1' || '' }}
      BUILD_ID: ${{ matrix.llvm-version }}-${{ matrix.cmake-version && format('cmake-{0}', matrix.cmake-version) || matrix.cmake-filename }}${{ matrix.ninja && '-ninja' || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: ./build.sh

      - name: Test
        run: ./test.sh

      - name: Upload LLVM build
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ID }}
          path: ${{ env.BUILD_ID }}.tar.gz
          if-no-files-found: ignore

      - name: Upload LLVM build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ID }}-build
          path: ${{ env.BUILD_ID }}-build.tar.gz
          if-no-files-found: ignore
